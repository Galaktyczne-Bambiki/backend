// <auto-generated />
using System;
using BambikiBackend.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BambikiBackend.Api.Database.Migrations
{
    [DbContext(typeof(BambikiDatabaseContext))]
    [Migration("20231007222205_AddTempReports")]
    partial class AddTempReports
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BambikiBackend.Api.Database.Entities.FireReportsEntity", b =>
                {
                    b.Property<long>("FireReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("FireReportId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("FireReportId");

                    b.ToTable("FireReports");
                });

            modelBuilder.Entity("BambikiBackend.Api.Database.Entities.TemperatureReportsEntity", b =>
                {
                    b.Property<long>("TemperatureReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TemperatureReportId"));

                    b.Property<double>("CelsiusValue")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("TemperatureReportId");

                    b.ToTable("TemperatureReports");
                });
#pragma warning restore 612, 618
        }
    }
}
